# Generated by Django 4.0.6 on 2022-12-10 05:28

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Area',
            fields=[
                ('area_pk', models.PositiveIntegerField(db_column='AREA_PK', primary_key=True, serialize=False)),
                ('area_size', models.PositiveIntegerField(db_column='AREA_SIZE')),
            ],
            options={
                'db_table': 'AREA',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Bill',
            fields=[
                ('bill_pk', models.PositiveBigIntegerField(db_column='Bill_PK', primary_key=True, serialize=False)),
                ('bill_cost', models.PositiveIntegerField(db_column='Bill_COST')),
                ('bill_craeted_dttm', models.CharField(blank=True, db_column='Bill_CRAETED_DTTM', max_length=45, null=True)),
                ('bill_modifed_dttm', models.CharField(blank=True, db_column='Bill_MODIFED_DTTM', max_length=45, null=True)),
            ],
            options={
                'db_table': 'Bill',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Board',
            fields=[
                ('board_pk', models.PositiveIntegerField(db_column='BOARD_PK', primary_key=True, serialize=False)),
                ('board_index', models.CharField(blank=True, db_column='BOARD_INDEX', max_length=100, null=True)),
                ('board_hot_post_like', models.IntegerField(blank=True, db_column='BOARD_HOT_POST_LIKE', null=True)),
            ],
            options={
                'db_table': 'BOARD',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Building',
            fields=[
                ('building_pk', models.CharField(db_column='BUILDING_PK', max_length=3, primary_key=True, serialize=False)),
            ],
            options={
                'db_table': 'BUILDING',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='CostType',
            fields=[
                ('cost_type_pk', models.IntegerField(db_column='COST_TYPE_PK', primary_key=True, serialize=False)),
                ('cost_type_nm', models.CharField(db_column='COST_TYPE_NM', max_length=45, unique=True)),
            ],
            options={
                'db_table': 'COST_TYPE',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='DjangoMigrations',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('app', models.CharField(max_length=255)),
                ('name', models.CharField(max_length=255)),
                ('applied', models.DateTimeField()),
            ],
            options={
                'db_table': 'django_migrations',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Household',
            fields=[
                ('household_pk', models.AutoField(db_column='HOUSEHOLD_PK', primary_key=True, serialize=False)),
                ('household_unit', models.CharField(db_column='HOUSEHOLD_UNIT', max_length=4)),
                ('household_representative_account', models.CharField(blank=True, db_column='HOUSEHOLD_REPRESENTATIVE_ACCOUNT', max_length=29, null=True)),
                ('household_occupancy_dt', models.DateField(blank=True, db_column='HOUSEHOLD_OCCUPANCY_DT', null=True)),
                ('area_area_pk', models.ForeignKey(db_column='AREA_AREA_PK', on_delete=django.db.models.deletion.DO_NOTHING, to='board.area')),
                ('building_building_pk', models.ForeignKey(db_column='BUILDING_BUILDING_PK', on_delete=django.db.models.deletion.DO_NOTHING, to='board.building')),
            ],
            options={
                'db_table': 'HOUSEHOLD',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Layout',
            fields=[
                ('layout_pk', models.IntegerField(db_column='LAYOUT_PK', primary_key=True, serialize=False)),
                ('layout_nm', models.CharField(db_column='LAYOUT_NM', max_length=45)),
            ],
            options={
                'db_table': 'LAYOUT',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Method',
            fields=[
                ('method_pk', models.PositiveIntegerField(db_column='METHOD_PK', primary_key=True, serialize=False)),
                ('method_nm', models.CharField(db_column='METHOD_NM', max_length=45, unique=True)),
            ],
            options={
                'db_table': 'METHOD',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='ParkingInfoFloor',
            fields=[
                ('parking_info_floor_pk', models.IntegerField(db_column='PARKING_INFO_FLOOR_PK', primary_key=True, serialize=False)),
                ('parking_info_floor_nm', models.CharField(db_column='PARKING_INFO_FLOOR_NM', max_length=50, unique=True)),
            ],
            options={
                'db_table': 'PARKING_INFO_FLOOR',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='ParkingInfoType',
            fields=[
                ('parking_info_type_pk', models.IntegerField(db_column='PARKING_INFO_TYPE_PK', primary_key=True, serialize=False)),
                ('parking_info_type_nm', models.CharField(db_column='PARKING_INFO_TYPE_NM', max_length=45)),
            ],
            options={
                'db_table': 'PARKING_INFO_TYPE',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='PayStatus',
            fields=[
                ('pay_status_pk', models.PositiveIntegerField(db_column='PAY_STATUS_PK', primary_key=True, serialize=False)),
                ('pay_status_nm', models.CharField(db_column='PAY_STATUS_NM', max_length=45)),
            ],
            options={
                'db_table': 'PAY_STATUS',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Role',
            fields=[
                ('role_pk', models.PositiveIntegerField(db_column='ROLE_PK', primary_key=True, serialize=False)),
                ('role_nm', models.CharField(db_column='ROLE_NM', max_length=45, unique=True)),
                ('role_kr_nm', models.CharField(db_column='ROLE_KR_NM', max_length=45, unique=True)),
            ],
            options={
                'db_table': 'ROLE',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Service',
            fields=[
                ('service_pk', models.PositiveIntegerField(db_column='SERVICE_PK', primary_key=True, serialize=False)),
                ('service_nm', models.CharField(db_column='SERVICE_NM', max_length=45, unique=True)),
                ('service_domain', models.CharField(db_column='SERVICE_DOMAIN', max_length=45, unique=True)),
                ('service_index', models.TextField(blank=True, db_column='SERVICE_INDEX', null=True)),
            ],
            options={
                'db_table': 'SERVICE',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='TossPayMethod',
            fields=[
                ('toss_pay_method_pk', models.PositiveIntegerField(db_column='TOSS_PAY_METHOD_PK', primary_key=True, serialize=False)),
                ('toss_pay_method_nm', models.CharField(db_column='TOSS_PAY_METHOD_NM', max_length=45)),
            ],
            options={
                'db_table': 'TOSS_PAY_METHOD',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='TossPayStatus',
            fields=[
                ('toss_pay_status_pk', models.PositiveIntegerField(db_column='TOSS_PAY_STATUS_PK', primary_key=True, serialize=False)),
                ('toss_pay_status_nm', models.CharField(db_column='TOSS_PAY_STATUS_NM', max_length=45)),
            ],
            options={
                'db_table': 'TOSS_PAY_STATUS',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='TossPayType',
            fields=[
                ('toss_pay_type_pk', models.PositiveIntegerField(db_column='TOSS_PAY_TYPE_PK', primary_key=True, serialize=False)),
                ('toss_pay_type_nm', models.CharField(db_column='TOSS_PAY_TYPE_NM', max_length=45)),
            ],
            options={
                'db_table': 'TOSS_PAY_TYPE',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('user_pk', models.CharField(db_column='USER_PK', max_length=28, primary_key=True, serialize=False)),
                ('user_phonenum', models.CharField(blank=True, db_column='USER_PHONENUM', max_length=11, null=True, unique=True)),
                ('user_email', models.CharField(db_column='USER_EMAIL', max_length=256, unique=True)),
                ('user_nm', models.CharField(db_column='USER_NM', max_length=45)),
                ('user_date_birth', models.DateField(blank=True, db_column='USER_DATE_BIRTH', null=True)),
                ('user_created_dttm', models.DateTimeField(blank=True, db_column='USER_CREATED_DTTM', null=True)),
                ('user_modified_dttm', models.DateTimeField(blank=True, db_column='USER_MODIFIED_DTTM', null=True)),
                ('household_household_pk', models.ForeignKey(db_column='HOUSEHOLD_HOUSEHOLD_PK', on_delete=django.db.models.deletion.DO_NOTHING, to='board.household')),
                ('role_role_pk', models.ForeignKey(db_column='ROLE_ROLE_PK', on_delete=django.db.models.deletion.DO_NOTHING, to='board.role')),
            ],
            options={
                'db_table': 'USER',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='VhclInfo',
            fields=[
                ('vhcl_info_pk', models.CharField(db_column='VHCL_INFO_PK', max_length=7, primary_key=True, serialize=False)),
                ('vhcl_info_nm', models.CharField(blank=True, db_column='VHCL_INFO_NM', max_length=100, null=True)),
                ('vhcl_info_created_dttm', models.DateTimeField(blank=True, db_column='VHCL_INFO_CREATED_DTTM', null=True)),
                ('vhcl_info_modified_dttm', models.DateTimeField(blank=True, db_column='VHCL_INFO_MODIFIED_DTTM', null=True)),
                ('vhcl_info_visiting_vehicle', models.IntegerField(db_column='VHCL_INFO_VISITING_VEHICLE')),
                ('household_household_pk', models.ForeignKey(db_column='HOUSEHOLD_HOUSEHOLD_PK', on_delete=django.db.models.deletion.DO_NOTHING, to='board.household')),
            ],
            options={
                'db_table': 'VHCL_INFO',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='VhclType',
            fields=[
                ('vhcl_type_pk', models.PositiveIntegerField(db_column='VHCL_TYPE_PK', primary_key=True, serialize=False)),
                ('vhcl_type_nm', models.CharField(db_column='VHCL_TYPE_NM', max_length=45)),
            ],
            options={
                'db_table': 'VHCL_TYPE',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='VhclInout',
            fields=[
                ('vhcl_inout_pk', models.PositiveIntegerField(db_column='VHCL_INOUT_PK', primary_key=True, serialize=False)),
                ('vhcl_inout_dttm', models.DateTimeField(db_column='VHCL_INOUT_DTTM')),
                ('vhcl_inout_type', models.PositiveIntegerField(db_column='VHCL_INOUT_TYPE')),
                ('vhcl_info_vhcl_info_pk', models.ForeignKey(db_column='VHCL_INFO_VHCL_INFO_PK', on_delete=django.db.models.deletion.DO_NOTHING, to='board.vhclinfo')),
            ],
            options={
                'db_table': 'VHCL_INOUT',
                'managed': True,
            },
        ),
        migrations.AddField(
            model_name='vhclinfo',
            name='vhcl_type_vhcl_type_pk',
            field=models.ForeignKey(db_column='VHCL_TYPE_VHCL_TYPE_PK', on_delete=django.db.models.deletion.DO_NOTHING, to='board.vhcltype'),
        ),
        migrations.CreateModel(
            name='TossPay',
            fields=[
                ('toss_pay_code', models.CharField(db_column='TOSS_PAY_CODE', max_length=200, primary_key=True, serialize=False)),
                ('toss_pay_order_id', models.CharField(db_column='TOSS_PAY_ORDER_ID', max_length=64)),
                ('toss_pay_order_name', models.CharField(db_column='TOSS_PAY_ORDER_NAME', max_length=45)),
                ('toss_pay_request_dttm', models.DateTimeField(db_column='TOSS_PAY_REQUEST_DTTM')),
                ('toss_pay_approved_dttm', models.DateTimeField(db_column='TOSS_PAY_APPROVED_DTTM')),
                ('toss_pay_transaction_key', models.CharField(db_column='TOSS_PAY_TRANSACTION_KEY', max_length=64)),
                ('toss_pay_last_transaction_key', models.CharField(db_column='TOSS_PAY_LAST_TRANSACTION_KEY', max_length=64)),
                ('toss_pay_cancels_transaction_key', models.CharField(blank=True, db_column='TOSS_PAY_CANCELS_TRANSACTION_KEY', max_length=64, null=True)),
                ('toss_pay_receipt', models.CharField(db_column='TOSS_PAY_RECEIPT', max_length=2000)),
                ('toss_pay_cash_receipt', models.CharField(blank=True, db_column='TOSS_PAY_CASH_RECEIPT', max_length=2000, null=True)),
                ('toss_pay_method_toss_pay_method_pk', models.ForeignKey(db_column='TOSS_PAY_METHOD_TOSS_PAY_METHOD_PK', on_delete=django.db.models.deletion.DO_NOTHING, to='board.tosspaymethod')),
                ('toss_pay_status_pay_status_pk', models.ForeignKey(db_column='TOSS_PAY_STATUS_PAY_STATUS_PK', on_delete=django.db.models.deletion.DO_NOTHING, to='board.tosspaystatus')),
                ('toss_pay_type_toss_pay_type_pk', models.ForeignKey(db_column='TOSS_PAY_TYPE_TOSS_PAY_TYPE_PK', on_delete=django.db.models.deletion.DO_NOTHING, to='board.tosspaytype')),
            ],
            options={
                'db_table': 'TOSS_PAY',
                'managed': True,
                'unique_together': {('toss_pay_code', 'toss_pay_order_id')},
            },
        ),
        migrations.CreateModel(
            name='RegisterCode',
            fields=[
                ('register_code_pk', models.CharField(db_column='REGISTER_CODE_PK', max_length=36, primary_key=True, serialize=False)),
                ('register_code_rep_user_name', models.CharField(db_column='REGISTER_CODE_REP_USER_NAME', max_length=50)),
                ('household_household_pk', models.ForeignKey(db_column='HOUSEHOLD_HOUSEHOLD_PK', on_delete=django.db.models.deletion.DO_NOTHING, to='board.household')),
            ],
            options={
                'db_table': 'REGISTER_CODE',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Post',
            fields=[
                ('post_pk', models.PositiveBigIntegerField(db_column='POST_PK', primary_key=True, serialize=False)),
                ('post_text', models.TextField(db_column='POST_TEXT')),
                ('post_title', models.CharField(blank=True, db_column='POST_TITLE', max_length=45, null=True)),
                ('post_tag', models.IntegerField(db_column='POST_TAG', null=True)),
                ('post_write_time', models.DateTimeField(auto_now_add=True, db_column='POST_WRITE_TIME')),
                ('post_update_time', models.DateTimeField(auto_now=True, db_column='POST_UPDATE_TIME')),
                ('board_board_pk', models.ForeignKey(db_column='BOARD_BOARD_PK', on_delete=django.db.models.deletion.DO_NOTHING, to='board.board')),
                ('post_refer', models.ForeignKey(db_column='POST_REFER', null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='board.post')),
                ('user_user_pk', models.ForeignKey(db_column='USER_USER_PK', null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='board.user')),
            ],
            options={
                'db_table': 'POST',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='PerCost',
            fields=[
                ('per_cost_pk', models.BigIntegerField(db_column='PER_COST_PK', primary_key=True, serialize=False)),
                ('per_cost_cost', models.CharField(blank=True, db_column='PER_COST_COST', max_length=45, null=True)),
                ('per_cost_modifed_dttm', models.DateTimeField(db_column='PER_COST_MODIFED_DTTM')),
                ('per_cost_craeted_dttm', models.DateTimeField(db_column='PER_COST_CRAETED_DTTM')),
                ('per_cost_nm', models.CharField(db_column='PER_COST_NM', max_length=45)),
                ('per_cost_index', models.CharField(blank=True, db_column='PER_COST_INDEX', max_length=200, null=True)),
                ('bill_bill_pk', models.ForeignKey(blank=True, db_column='Bill_Bill_PK', null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='board.bill')),
                ('cost_type_cost_type_pk', models.ForeignKey(db_column='COST_TYPE_COST_TYPE_PK', on_delete=django.db.models.deletion.DO_NOTHING, to='board.costtype')),
                ('household_household_pk', models.ForeignKey(db_column='HOUSEHOLD_HOUSEHOLD_PK', on_delete=django.db.models.deletion.DO_NOTHING, to='board.household')),
            ],
            options={
                'db_table': 'PER_COST',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Pay',
            fields=[
                ('pay_pk', models.BigIntegerField(db_column='PAY_PK', primary_key=True, serialize=False)),
                ('pay_created_dttm', models.DateTimeField(blank=True, db_column='PAY_CREATED_DTTM', null=True)),
                ('pay_modifed_dttm', models.DateTimeField(blank=True, db_column='PAY_MODIFED_DTTM', null=True)),
                ('pay_toss_code', models.CharField(blank=True, db_column='PAY_TOSS_CODE', max_length=200, null=True)),
                ('bill_bill_pk', models.ForeignKey(db_column='Bill_Bill_PK', on_delete=django.db.models.deletion.DO_NOTHING, to='board.bill')),
                ('pay_status_pay_status_pk', models.ForeignKey(db_column='PAY_STATUS_PAY_STATUS_PK', on_delete=django.db.models.deletion.DO_NOTHING, to='board.paystatus')),
                ('toss_pay_toss_pay_code', models.ForeignKey(db_column='TOSS_PAY_TOSS_PAY_CODE', on_delete=django.db.models.deletion.DO_NOTHING, related_name='toss_pay_toss_pay_code', to='board.tosspay')),
                ('toss_pay_toss_pay_order', models.ForeignKey(db_column='TOSS_PAY_TOSS_PAY_ORDER_ID', on_delete=django.db.models.deletion.DO_NOTHING, related_name='toss_pay_toss_pay_order', to='board.tosspay')),
            ],
            options={
                'db_table': 'PAY',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='ParkingInfo',
            fields=[
                ('parking_info_pk', models.CharField(db_column='PARKING_INFO_PK', max_length=50, primary_key=True, serialize=False)),
                ('parking_info_last_parking_dttm', models.DateTimeField(blank=True, db_column='PARKING_INFO_LAST_PARKING_DTTM', null=True)),
                ('parking_info_status', models.IntegerField(blank=True, db_column='PARKING_INFO_STATUS', null=True)),
                ('parking_info_parking_info_floor_pk', models.ForeignKey(db_column='PARKING_INFO_PARKING_INFO_FLOOR_PK', on_delete=django.db.models.deletion.DO_NOTHING, to='board.parkinginfofloor')),
                ('parking_info_type_parking_info_type_pk', models.ForeignKey(db_column='PARKING_INFO_TYPE_PARKING_INFO_TYPE_PK', on_delete=django.db.models.deletion.DO_NOTHING, to='board.parkinginfotype')),
            ],
            options={
                'db_table': 'PARKING_INFO',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Image',
            fields=[
                ('image_pk', models.BigIntegerField(db_column='IMAGE_PK', primary_key=True, serialize=False)),
                ('image_location', models.CharField(db_column='IMAGE_LOCATION', max_length=260, unique=True)),
                ('post_post_pk', models.ForeignKey(db_column='POST_POST_PK', on_delete=django.db.models.deletion.DO_NOTHING, to='board.post')),
            ],
            options={
                'db_table': 'IMAGE',
                'managed': True,
            },
        ),
        migrations.AddField(
            model_name='household',
            name='household_representative_user_user_pk',
            field=models.ForeignKey(blank=True, db_column='HOUSEHOLD_REPRESENTATIVE_USER_USER_PK', null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='board.user'),
        ),
        migrations.CreateModel(
            name='Comment',
            fields=[
                ('comment_pk', models.PositiveBigIntegerField(db_column='COMMENT_PK', primary_key=True, serialize=False)),
                ('status', models.PositiveIntegerField(db_column='STATUS')),
                ('comment_parent_comment_comment_pk', models.ForeignKey(blank=True, db_column='COMMENT_PARENT_COMMENT_COMMENT_PK', null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='board.comment')),
                ('post_post_pk', models.ForeignKey(db_column='POST_POST_PK', on_delete=django.db.models.deletion.DO_NOTHING, to='board.post')),
                ('user_user_pk', models.ForeignKey(db_column='USER_USER_PK', on_delete=django.db.models.deletion.DO_NOTHING, to='board.user')),
            ],
            options={
                'db_table': 'COMMENT',
                'managed': True,
            },
        ),
        migrations.AddField(
            model_name='building',
            name='user_user_pk',
            field=models.ForeignKey(blank=True, db_column='USER_USER_PK', null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='board.user'),
        ),
        migrations.AddField(
            model_name='board',
            name='board_comment_role_role_pk',
            field=models.ForeignKey(db_column='BOARD_COMMENT_ROLE_ROLE_PK', on_delete=django.db.models.deletion.DO_NOTHING, related_name='board_comment_role_role_pk', to='board.role'),
        ),
        migrations.AddField(
            model_name='board',
            name='board_read_role_role_pk',
            field=models.ForeignKey(db_column='BOARD_READ_ROLE_ROLE_PK', on_delete=django.db.models.deletion.DO_NOTHING, related_name='board_read_role_role_pk', to='board.role'),
        ),
        migrations.AddField(
            model_name='board',
            name='board_write_role_role_pk',
            field=models.ForeignKey(db_column='BOARD_WRITE_ROLE_ROLE_PK', on_delete=django.db.models.deletion.DO_NOTHING, related_name='board_write_role_role_pk', to='board.role'),
        ),
        migrations.AddField(
            model_name='board',
            name='layout_layout_pk',
            field=models.ForeignKey(db_column='LAYOUT_LAYOUT_PK', on_delete=django.db.models.deletion.DO_NOTHING, to='board.layout'),
        ),
        migrations.AddField(
            model_name='bill',
            name='household_household_pk',
            field=models.ForeignKey(db_column='HOUSEHOLD_HOUSEHOLD_PK', on_delete=django.db.models.deletion.DO_NOTHING, to='board.household'),
        ),
        migrations.CreateModel(
            name='ApiRoute',
            fields=[
                ('api_route_pk', models.AutoField(db_column='API_ROUTE_PK', primary_key=True, serialize=False)),
                ('api_route_path', models.CharField(db_column='API_ROUTE_PATH', max_length=45)),
                ('api_route_gateway_refresh', models.IntegerField(blank=True, db_column='API_ROUTE_GATEWAY_REFRESH', null=True)),
                ('api_route_only_token', models.IntegerField(blank=True, db_column='API_ROUTE_ONLY_TOKEN', null=True)),
                ('api_route_optional', models.IntegerField(blank=True, db_column='API_ROUTE_OPTIONAL', null=True)),
                ('api_route_authorization', models.IntegerField(blank=True, db_column='API_ROUTE_AUTHORIZATION', null=True)),
                ('method_method_pk', models.ForeignKey(db_column='METHOD_METHOD_PK', on_delete=django.db.models.deletion.DO_NOTHING, to='board.method')),
                ('role_role_pk', models.ForeignKey(blank=True, db_column='ROLE_ROLE_PK', null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='board.role')),
                ('service_service_pk', models.ForeignKey(db_column='SERVICE_SERVICE_PK', on_delete=django.db.models.deletion.DO_NOTHING, to='board.service')),
            ],
            options={
                'db_table': 'API_ROUTE',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='AllCost',
            fields=[
                ('all_cost_pk', models.BigIntegerField(db_column='ALL_COST_PK', primary_key=True, serialize=False)),
                ('all_cost_cost', models.PositiveIntegerField(db_column='ALL_COST_COST')),
                ('all_cost_nm', models.CharField(db_column='ALL_COST_NM', max_length=45)),
                ('all_cost_index', models.CharField(blank=True, db_column='ALL_COST_INDEX', max_length=200, null=True)),
                ('all_cost_craeted_dttm', models.DateTimeField(db_column='ALL_COST_CRAETED_DTTM')),
                ('all_cost_modifed_dttm', models.DateTimeField(db_column='ALL_COST_MODIFED_DTTM')),
                ('cost_type_cost_type_pk', models.ForeignKey(db_column='COST_TYPE_COST_TYPE_PK', on_delete=django.db.models.deletion.DO_NOTHING, to='board.costtype')),
            ],
            options={
                'db_table': 'ALL_COST',
                'managed': True,
            },
        ),
        migrations.AlterUniqueTogether(
            name='household',
            unique_together={('household_unit', 'building_building_pk')},
        ),
        migrations.CreateModel(
            name='View',
            fields=[
                ('user_user_pk', models.OneToOneField(db_column='USER_USER_PK', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='board.user')),
                ('view_created_dttm', models.DateTimeField(blank=True, db_column='VIEW_CREATED_DTTM', null=True)),
                ('post_post_pk', models.ForeignKey(db_column='POST_POST_PK', on_delete=django.db.models.deletion.DO_NOTHING, to='board.post')),
            ],
            options={
                'db_table': 'VIEW',
                'managed': True,
                'unique_together': {('user_user_pk', 'post_post_pk')},
            },
        ),
        migrations.CreateModel(
            name='Like',
            fields=[
                ('post_post_pk', models.OneToOneField(db_column='POST_POST_PK', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='board.post')),
                ('like_create_dttm', models.DateTimeField(blank=True, db_column='LIKE_CREATE_DTTM', null=True)),
                ('user_user_pk', models.ForeignKey(db_column='USER_USER_PK', on_delete=django.db.models.deletion.DO_NOTHING, to='board.user')),
            ],
            options={
                'db_table': 'LIKE',
                'managed': True,
                'unique_together': {('post_post_pk', 'user_user_pk')},
            },
        ),
        migrations.CreateModel(
            name='AllCostAndHousehold',
            fields=[
                ('all_cost_all_cost_pk', models.OneToOneField(db_column='ALL_COST_ALL_COST_PK', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='board.allcost')),
                ('bill_bill_pk', models.ForeignKey(blank=True, db_column='Bill_Bill_PK', null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='board.bill')),
                ('household_household_pk', models.ForeignKey(db_column='HOUSEHOLD_HOUSEHOLD_PK', on_delete=django.db.models.deletion.DO_NOTHING, to='board.household')),
            ],
            options={
                'db_table': 'ALL_COST_AND_HOUSEHOLD',
                'managed': True,
                'unique_together': {('all_cost_all_cost_pk', 'household_household_pk')},
            },
        ),
    ]
